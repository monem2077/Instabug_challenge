version: '3'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0
    environment:
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"

  db:
    image: mysql:5.7
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: instabug_challenge
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    restart: always
    ports:
      - "3307:3306"

  redis:
    image: redis
    volumes:
      - 'redis:/data'

  sidekiq:
    depends_on:
      - redis
    build: .
    command: bundle exec sidekiq
    volumes:
      - '.:/instabug_challenge'
    environment:
      RAILS_ENV: "development"
      REDIS_URL: "redis://redis:6379/12"
      DB_USER: user
      DB_NAME: instabug_challenge
      DB_PASSWORD: password
      DB_HOST: localhost
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      DATABASE_URL: 'mysql2://db'

  web:
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails db:migrate &&
      bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/instabug_challenge
    ports:
      - "3001:3000"
    depends_on:
      - db
    links:
      - db
    environment:
      DB_USER: user
      DB_NAME: instabug_challenge
      DB_PASSWORD: password
      DB_HOST: localhost
      RAILS_ENV: "development"
      REDIS_URL: "redis://redis:6379/12"
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      DATABASE_URL: 'mysql2://db'

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - 8080:80
    environment:
      - PMA_HOST=db
      - PMA_USER=root
      - PMA_PASSWORD=root
    depends_on:
      - db

  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    container_name: instabug_challenge_kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  redis:
  mysql:
